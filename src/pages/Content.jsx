const Content = () => {
  return (
    <div className="container">
		<p>
			참고용 - 아토믹 폴더구조 장·단점<br /><br />
			폴더구조의 경우, 개발자의 요청대로 진행하되, <br />
			아토믹구조를 접하지못한 개발자와 소통시 필요한 경우가 있어 짧게 정리했습니다.<br />
		</p><br />
      <h2>아토믹 폴더구조의 장점</h2>
      <dl>
        <dt>재사용성</dt>
        <dd>최소단위로 활용하므로 재사용성이 좋음</dd>
        <dt>디자인 통일성</dt>
        <dd>최소단위부터 컴포넌트화하기때문에 같은 디자인이 적용됨</dd>
        <dt>단위테스트, 스냅샷 테스트</dt>
        <dd>최소 단위에서부터 이슈를 잡아내 탄위테스트에 용이함</dd>
      </dl><br />
      <h2>아토믹 폴더구조의 단점</h2>
      <dl>
        <dt>개발 복잡도</dt>
				<dd>최소단위에서부터 페이지까지 데이터를 계속 끌고다녀 개발난이도가 있음</dd>
        <dt>구성</dt>
				<dd>기획단계에서부터 구성이 탄탄하지 않으면 지속적으로 atom부터 page까지 계속 수정함</dd>
				<dt>모호함</dt>
				<dd>컴포넌트가 어디에 속하는지(모큘, 오거니즘, 템플릿) 모호하여 커뮤니케이션이 많이 필요함</dd>
				<dt>러닝커브</dt>
				<dd>기획자부터 개발자까지 모두 개념을 이해하고 있어야 탄탄한 구성이 가능</dd>
      </dl>
    </div>
  );
};

export default Content;
